#ifndef XCP_PROTOCOL_TYPEDEFS_H_
#define XCP_PROTOCOL_TYPEDEFS_H_


typedef enum
{
 BYTE_ORDER_MSB_LAST = 0,
 BYTE_ORDER_MSB_FIRST = 1
} byte_order_t;


typedef enum
{
  ADDRESS_GRANULARITY_BYTE = 0,
  ADDRESS_GRANULARITY_WORD = 1,
  ADDRESS_GRANULARITY_DWORD = 2
} address_granularity_t;


typedef enum
{
  CONNECT = 0xFF,
  GET_STATUS = 0xFD,
  SYNCH = 0xFC,
  GET_COMM_MODE_INFO = 0xFB,
  GET_ID = 0xFA,
  SET_REQUEST = 0xF9,
  GET_SEED = 0xF8,
  UNLOCK = 0xF7,
  SET_MTA = 0xF6,
  UPLOAD = 0xF5,
  SHORT_UPLOAD = 0xF4,
  BUILD_CHECKSUM = 0xF3,
  TRANSPORT_LAYER_CMD = 0xF2,
  USER_CMD = 0xF1,
  DOWNLOAD = 0xF0,
  DOWNLOAD_NEXT = 0xEF,
  DOWNLOAD_MAX = 0xEE,
  SHORT_DOWNLOAD = 0xED,
  MODIFY_BITS = 0xEC,
  SET_CAL_PAGE = 0xEB,
  GET_CAL_PAGE = 0xEA,
  GET_PAG_PROCESSOR_INFO = 0xE9,
  GET_SEGMENT_INFO = 0xE8,
  GET_PAGE_INFO = 0xE7,
  SET_SEGMENT_MODE = 0xE6,
  GET_SEGMENT_MODE = 0xE5,
  COPY_CAL_PAGE = 0xE4,
  CLEAR_DAQ_LIST = 0xE3,
  SET_DAQ_PTR = 0xE2,
  WRITE_DAQ = 0xE1,
  SET_DAQ_LIST_MODE = 0xE0,
  GET_DAQ_LIST_MODE = 0xDF,
  START_STOP_DAQ_LIST = 0xDE,
  START_STOP_SYNCH = 0xDD,
  GET_DAQ_CLOCK = 0xDC,
  READ_DAQ = 0xDB,
  GET_DAQ_PROCESSOR_INFO = 0xDA,
  GET_DAQ_RESOLUTION_INFO = 0xD9,
  GET_DAQ_LIST_INFO = 0xD8,
  GET_DAQ_EVENT_INFO = 0xD7,
  FREE_DAQ = 0xD6,
  ALLOC_DAQ = 0xD5,
  ALLOC_ODT = 0xD4,
  ALLOC_ODT_ENTRY = 0xD3,
  PROGRAM_START = 0xD2,
  PROGRAM_CLEAR = 0xD1,
  PROGRAM = 0xD0,
  PROGRAM_RESET = 0xCF,
  GET_PGM_PROCESSOR_INFO = 0xCE,
  GET_SECTOR_INFO = 0xCD,
  PROGRAM_PREPARE = 0xCC,
  PROGRAM_FORMAT = 0xCB,
  PROGRAM_NEXT = 0xCA,
  PROGRAM_MAX = 0xC9,
  PROGRAM_VERIFY = 0xC8,
  DISCONNECT = 0xFE
} optional_cmt_t;


typedef enum
{
    DIRECTION_DAQ = 0,
    DIRECTION_STIM = 1
} daq_list_direction_t;


typedef enum
{
    DAQ_STOP = 0,
    DAQ_START = 1,
    DAQ_SELECT = 2
} daq_list_startstop_t;

typedef enum
{
  OVERLOAD_NONE = 0,
  OVERLOAD_MSB_PID = 1,
  OVERLOAD_EVENT = 2
} overload_t;


typedef enum
{
    DAQ_STATIC,
    DAQ_DYNAMIC
} DAQconfigType_t;


typedef enum
{
	OM_DEFAULT,
	OM_ODT_TYPE_16,
	OM_ODT_TYPE_32,
	OM_ODT_TYPE_64,
	OM_ODT_TYPE_ALIGNMENT,
	OM_MAX_ENTRY_SIZE
} optimisation_type_t;


typedef enum
{
  ADDR_EXTENSION_DIFFERENT = 0,
  ADDR_EXTENSION_SAME_WITHIN_ONE_ODT = 1,
  ADDR_EXTENSION_SAME_WITHIN_ONE_DAQ = 3,
} address_extension_type_t;


typedef enum
{
  ABSODT,
  RELODT_ABSDAQ_BYTE,
  RELODT_ABSDAQ_WORD,
  RELODT_ABSDAQ_WORD_ALIGNED,
} identification_field_type_t;


typedef enum
{
  DAQ = 4, STIM = 8, DAQ_STIM = 0xC
} daq_ev_properties_t;


typedef enum
{
  DAQ_TIMESTAMP_UNIT_1NS = 0,
  DAQ_TIMESTAMP_UNIT_10NS = 1,
  DAQ_TIMESTAMP_UNIT_100NS = 2,
  DAQ_TIMESTAMP_UNIT_1US = 3,
  DAQ_TIMESTAMP_UNIT_10US = 4,
  DAQ_TIMESTAMP_UNIT_100US = 5,
  DAQ_TIMESTAMP_UNIT_1MS = 6,
  DAQ_TIMESTAMP_UNIT_10MS = 7,
  DAQ_TIMESTAMP_UNIT_100MS = 8,
  DAQ_TIMESTAMP_UNIT_1S = 9
} daq_timestamp_unit_t;


typedef enum
{
    ERR_CMD_SYNCH = 0x00,
    ERR_CMD_BUSY = 0x10,
    ERR_DAQ_ACTIVE = 0x11,
    ERR_PGM_ACTIVE = 0x12,
    ERR_CMD_UNKNOWN = 0x20,
    ERR_CMD_SYNTAX = 0x21,
    ERR_OUT_OF_RANGE = 0x22,
    ERR_WRITE_PROTECTED = 0x23,
    ERR_ACCESS_DENIED = 0x24,
    ERR_ACCESS_LOCKED = 0x25,
    ERR_PAGE_NOT_VALID = 0x26,
    ERR_MODE_NOT_VALID = 0x27,
    ERR_SEGMENT_NOT_VALID = 0x28,
    ERR_SEQUENCE = 0x29,
    ERR_DAQ_CONFIG = 0x2A,
    ERR_MEMORY_OVERFLOW = 0x30,
    ERR_GENERIC = 0x31,
    ERR_VERIFY = 0x32,
} response_t;


typedef enum
{
    SYNCH_STOP_ALL = 0,
    SYNCH_START_SELECTED = 1,
    SYNCH_STOP_SELECTED = 2,
} start_stop_synch_t;


typedef enum
{
	POSITIVE_RESPONSE = 0xFF,
    ERR = 0xFE,
} pid_t;

#endif /* USRC_XCP_XCP_PROTOCOL_TYPEDEFS_H_ */
